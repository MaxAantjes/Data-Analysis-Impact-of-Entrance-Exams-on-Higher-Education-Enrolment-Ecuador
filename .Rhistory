geom_line(aes(y = PB.prop.rural, col = "PB method")) +
geom_point(aes(y = PB.prop.rural, col = "PB method")) +
labs(title = "Proportion of rural population enrolled as first year undergraduate students",
subtitle = "Population 18-24 y/o. Period Dec 2007 to Sep 2019.",
x ="survey date", y ="proportion") + coord_cartesian(ylim = c(0, 0.09))
print(comb.prop.rur.plot)
## GOAL: Create a plot for urban proportions merged for different methods.
PA.table.prop <- PA.table %>%
select(survey.date, PA.prop.urban)
CA.table.prop <- CA.table %>%
select(survey.date, CA.prop.urban)
PB.table.prop <- PB.table %>%
select(survey.date, PB.prop.urban)
## METHOD: merge tables into one table.
combined.prop.urb <- merge(PA.table.prop, CA.table.prop)
combined.prop.urb <- merge(combined.prop.urb, PB.table.prop, all.x = TRUE)
comb.prop.urb.plot <- ggplot(combined.prop.urb, aes(survey.date, y = population, color = methodology)) +
geom_line(aes(y = PA.prop.urban, col = "PA method")) +
geom_point(aes(y = PA.prop.urban, col = "PA method")) +
geom_line(aes(y = CA.prop.urban, col = "CA method")) +
geom_point(aes(y = CA.prop.urban, col = "CA method")) +
geom_line(aes(y = PB.prop.urban, col = "PB method")) +
geom_point(aes(y = PB.prop.urban, col = "PB method")) +
labs(title = "Proportion of urban population enrolled as first year undergraduate students",
subtitle = "Population 18-24 y/o. Period Dec 2007 to Sep 2019.",
x ="survey date", y ="proportion") + coord_cartesian(ylim = c(0, 0.09))
print(comb.prop.urb.plot)
library(grid)
grid.newpage()
grid.draw(rbind(ggplotGrob(comb.prop.urb.plot), ggplotGrob(comb.prop.rur.plot), ggplotGrob(comb.ratio.plot)))
combined.ratio
## This module explores the data in 3 different ways.
## Create last.migration variable. Note: rows with outside migration are lost.
library(pacman)
pacman::p_load(dplyr, reshape2, ggplot2, zoo)
dat0 <- readRDS("modified_data_2.csv")
## GOAL: Select the group of first year undergraduates.
first.years <- dat0 %>%
filter(higher.education.level == "undergraduate" &
no.years.completed == 1 &
currently.matriculated == "yes")
## GOAL: select adequate 'total' set of the population to create
## proportions.
## METHOD: look for age ranges with at least 10 first year students.
table1 <- dcast(first.years, age ~ no.years.completed)
table1 <- subset(table1, table1[[2]] > 500)
ages.of.interest <- as.vector(table1[[1]])
## METHOD: filter data set for relevant age range. Migrants
## or citizens that have returned from abroad are removed from the
## data set.
total <- dat0 %>%
filter(age %in% ages.of.interest) %>%
filter(location.prior.address == "urban" |
location.prior.address == "rural" |
location.prior.address == "none") %>%
filter(place.of.birth == "urban" | place.of.birth == "rural" |
is.na(place.of.birth))
first.years <- total %>%
filter(higher.education.level == "undergraduate" &
no.years.completed == 1 &
currently.matriculated == "yes")
## ----------------------------------------------------------------##
## GOAL: calculate % enrolment of individuals who identify as urban and
## rural in terms of CURRENT.ADDRESS per survey.date.
## METHOD: create a table of the number of individuals enrolled as
## undergraduates at university by the variables CURRENT.ADDRESS and SURVEY.DATE.
CA.table <- dcast(first.years, survey.date ~ current.address)
## METHOD: count total number of individuals identified as urban
## by CURRENT.ADDRESS.
dat.urban <- total %>%
filter(current.address == "urban")
list0 <- split(dat.urban, dat.urban$survey.date)
number.urban <- data.frame(unlist(lapply(list0, nrow)))
## METHOD: count total number of individuals identified as rural
## by CURRENT.ADDRESS.
dat.rural <- total %>%
filter(current.address == "rural")
list1 <- split(dat.rural, dat.rural$survey.date)
number.rural <- data.frame(unlist(lapply(list1, nrow)))
## METHOD: divide the number of enrolled rural and urban undergraduates per year
## by the total rural and urban populations respectively.
CA.table$numb.urban <- number.urban[, 1]
CA.table$numb.rural <- number.rural[, 1]
CA.table$total <- CA.table$urban+CA.table$rural
CA.table$CA.prop.urban <- CA.table$urban/CA.table$numb.urban
CA.table$CA.prop.rural <- CA.table$rural/CA.table$numb.rural
CA.table$prop.total <- CA.table$total/(CA.table$numb.rural+CA.table$numb.urban)
CA.table$CA.rural.urban.ratio <- CA.table$CA.prop.rural/CA.table$CA.prop.urban
## ----------------------------------------------------------------##
## GOAL: calculate % enrolment of individuals who identify as urban and
## rural in terms of PLACE.OF.BIRTH per survey.date.
## METHOD: create a table of the number of individuals enrolled as
## undergraduates at university by the variables PLACE.OF.BIRTH and SURVEY.DATE.
first.years.PB <- first.years %>%
filter(!is.na(place.of.birth))
PB.table <- dcast(first.years.PB, survey.date ~ place.of.birth)
## METHOD: count total number of individuals identified as urban
## by PLACE.OF.BIRTH.
dat.urban1 <- total %>%
filter(place.of.birth == "urban")
list0 <- split(dat.urban1, dat.urban1$survey.date)
number.urban1 <- data.frame(unlist(lapply(list0, nrow)))
## METHOD: count total number of individuals identified as rural
## by PLACE.OF.BIRTH.
dat.rural1 <- total %>%
filter(place.of.birth == "rural")
list1 <- split(dat.rural1, dat.rural1$survey.date)
number.rural1 <- data.frame(unlist(lapply(list1, nrow)))
## METHOD: divide the number of enrolled rural and urban undergraduates per year
## by the total rural and urban populations respectively.
PB.table$numb.urban <- number.urban1[, 1]
PB.table$numb.rural <- number.rural1[, 1]
PB.table$total <- PB.table$urban+PB.table$rural
PB.table$PB.prop.urban <- PB.table$urban/PB.table$numb.urban
PB.table$PB.prop.rural <- PB.table$rural/PB.table$numb.rural
PB.table$prop.total <- PB.table$total/(PB.table$numb.rural+PB.table$numb.urban)
PB.table$PB.rural.urban.ratio <- (PB.table$PB.prop.rural/PB.table$PB.prop.urban)*100
## ----------------------------------------------------------------##
## GOAL: calculate % enrolment of individuals who identify as urban and
## rural in terms of PRIOR.ADDRESS and CURRENT.ADDRESS per survey.date.
## METHOD: create a variable which indicates whether someone has either lives
## in a rural/urban area OR has changed area for academic reasons.
first.years.dat1R <- total %>%
filter(current.address == "rural" & ever.moved == "no" | # always lived rural
current.address == "rural" & ever.moved == "yes" &
location.prior.address == "urban" & !reason.for.migration == "academic" | # moved from urban to rural but not for academic reasons
current.address == "urban" & ever.moved == "yes" &
location.prior.address == "rural" & reason.for.migration == "academic" | # moved from rural to urban for academic reasons
current.address == "rural" & location.prior.address == "rural") %>% # always rural but moved
filter(higher.education.level == "undergraduate" &
no.years.completed == 1 &
currently.matriculated == "yes")  %>%
mutate(identification = "rural")
first.years.dat1U <- total %>%
filter(current.address == "urban" & ever.moved == "no" | ## always lived urban
current.address == "rural" & ever.moved == "yes" &
location.prior.address == "urban" & reason.for.migration == "academic" | # moved from urban to rural for academic reasons
current.address == "urban" & ever.moved == "yes" &
location.prior.address == "rural" & !reason.for.migration == "academic" | # moved from rural to urban but for non academic reasons
current.address == "urban" & location.prior.address == "urban") %>% # always urban but moved
filter(higher.education.level == "undergraduate" &
no.years.completed == 1 &
currently.matriculated == "yes")  %>%
mutate(identification = "urban")
## METHOD: Check no rows were lost or duplicated and bind rows.
isTRUE(nrow(first.years) == nrow(first.years.dat1R)+nrow(first.years.dat1U))
first.years.dat1 <- rbind(first.years.dat1R, first.years.dat1U)
## METHOD: create table based on survey date and identification.
PA.table <- dcast(first.years.dat1, survey.date ~ identification)
## METHOD: count total number of individuals identified as urban
## by PLACE.OF.BIRTH.
dat.urban2 <- total %>%
filter(current.address == "urban")
list0 <- split(dat.urban2, dat.urban2$survey.date)
number.urban2 <- data.frame(unlist(lapply(list0, nrow)))
## METHOD: count total number of individuals identified as rural
## by PLACE.OF.BIRTH.
dat.rural2 <- total %>%
filter(current.address == "rural")
list1 <- split(dat.rural2, dat.rural2$survey.date)
number.rural2 <- data.frame(unlist(lapply(list1, nrow)))
## METHOD: divide the number of enrolled rural and urban undergraduates per year
## by the total rural and urban populations respectively.
PA.table$numb.urban <- number.urban2[, 1]
PA.table$numb.rural <- number.rural2[, 1]
PA.table$total <- PA.table$urban+PA.table$rural
PA.table$PA.prop.urban <- PA.table$urban/PA.table$numb.urban
PA.table$PA.prop.rural <- PA.table$rural/PA.table$numb.rural
PA.table$prop.total <- PA.table$total/(CA.table$numb.rural+PA.table$numb.urban)
PA.table$PA.rural.urban.ratio <- (PA.table$PA.prop.rural/PA.table$PA.prop.urban)*100
## ----------------------------------------------------------------##
## GOAL: explore the difference in academic migration between
## those of rural and urban origin.
academic.migration <- first.years.dat1 %>%
filter(reason.for.migration == "academic") %>%
mutate(identification = factor(
ifelse(identification == "rural",
"rural.to.urban.migration",
"urban.to.rural.migration")))
dat.urban3 <- first.years.dat1U
list0 <- split(dat.urban3, dat.urban3$survey.date)
number.urban3 <- data.frame(unlist(lapply(list0, nrow)))
## METHOD: count total number of individuals identified as rural
## by PLACE.OF.BIRTH.
dat.rural3 <- first.years.dat1R
list1 <- split(dat.rural3, dat.rural3$survey.date)
number.rural3 <- data.frame(unlist(lapply(list1, nrow)))
migration.table <- dcast(academic.migration, survey.date ~ identification)
migration.table$numb.rural <- number.rural3[, 1]
migration.table$numb.urban <- number.urban3[, 1]
migration.table$prop.r.to.u.migration <- migration.table$rural.to.urban.migration/migration.table$numb.rural
migration.table$prop.u.to.r.migration <- migration.table$urban.to.rural.migration/migration.table$numb.urban
migration.table$ratio.r.over.u <- (migration.table$prop.r.to.u.migration/migration.table$prop.u.to.r.migration)*100
## Save data.
saveRDS(PA.table, "past.address.table.csv")
saveRDS(PB.table, "place.of.birth.table.csv")
saveRDS(CA.table, "current.address.table.csv")
saveRDS(migration.table, "academic.migration.csv")
rm(list = ls())
## This module visualises the data.
library(pacman)
pacman::p_load(ggplot2, zoo, dplyr)
PA.table <- readRDS("past.address.table.csv")
PB.table <- readRDS("place.of.birth.table.csv")
CA.table <- readRDS("current.address.table.csv")
migration.table <- readRDS("academic.migration.csv")
## GOAL: Create plot comparing rural.urban.ratio for each method.
## METHOD: Select columns of interest for each table.
PA.table.ratio <- PA.table %>%
select(survey.date, PA.rural.urban.ratio)
CA.table.ratio <- CA.table %>%
select(survey.date, CA.rural.urban.ratio)
PB.table.ratio <- PB.table %>%
select(survey.date, PB.rural.urban.ratio)
## METHOD: merge tables into one table.
combined.ratio <- merge(PA.table.ratio, CA.table.ratio)
combined.ratio <- merge(combined.ratio, PB.table.ratio, all.x = TRUE)
## METHOD: create a plot.
comb.ratio.plot <- ggplot(combined.ratio, aes(survey.date, y = population, color = methodology)) +
geom_line(aes(y = PA.rural.urban.ratio, col = "PA method")) +
geom_point(aes(y = PA.rural.urban.ratio, col = "PA method")) +
geom_line(aes(y = CA.rural.urban.ratio, col = "CA method")) +
geom_point(aes(y = CA.rural.urban.ratio, col = "CA method")) +
geom_line(aes(y = PB.rural.urban.ratio, col = "PB method")) +
geom_point(aes(y = PB.rural.urban.ratio, col = "PB method")) +
labs(title = "Ratio of the proportion of rural and urban population enrolled as first year undergraduate students",
subtitle = "Population 18-24 y/o. Period Dec 2007 to Sep 2019.",
x ="survey date", y ="rural:urban enrolment ratio")
print(comb.ratio.plot)
## GOAL: Create a plot for rural proportions merged for different methods.
PA.table.prop <- PA.table %>%
select(survey.date, PA.prop.rural)
CA.table.prop <- CA.table %>%
select(survey.date, CA.prop.rural)
PB.table.prop <- PB.table %>%
select(survey.date, PB.prop.rural)
## METHOD: merge tables into one table.
combined.prop.rur <- merge(PA.table.prop, CA.table.prop)
combined.prop.rur <- merge(combined.prop.rur, PB.table.prop, all.x = TRUE)
comb.prop.rur.plot <- ggplot(combined.prop.rur, aes(survey.date, y = population, color = methodology)) +
geom_line(aes(y = PA.prop.rural, col = "PA method")) +
geom_point(aes(y = PA.prop.rural, col = "PA method")) +
geom_line(aes(y = CA.prop.rural, col = "CA method")) +
geom_point(aes(y = CA.prop.rural, col = "CA method")) +
geom_line(aes(y = PB.prop.rural, col = "PB method")) +
geom_point(aes(y = PB.prop.rural, col = "PB method")) +
labs(title = "Proportion of rural population enrolled as first year undergraduate students",
subtitle = "Population 18-24 y/o. Period Dec 2007 to Sep 2019.",
x ="survey date", y ="proportion") + coord_cartesian(ylim = c(0, 0.09))
print(comb.prop.rur.plot)
## GOAL: Create a plot for urban proportions merged for different methods.
PA.table.prop <- PA.table %>%
select(survey.date, PA.prop.urban)
CA.table.prop <- CA.table %>%
select(survey.date, CA.prop.urban)
PB.table.prop <- PB.table %>%
select(survey.date, PB.prop.urban)
## METHOD: merge tables into one table.
combined.prop.urb <- merge(PA.table.prop, CA.table.prop)
combined.prop.urb <- merge(combined.prop.urb, PB.table.prop, all.x = TRUE)
comb.prop.urb.plot <- ggplot(combined.prop.urb, aes(survey.date, y = population, color = methodology)) +
geom_line(aes(y = PA.prop.urban, col = "PA method")) +
geom_point(aes(y = PA.prop.urban, col = "PA method")) +
geom_line(aes(y = CA.prop.urban, col = "CA method")) +
geom_point(aes(y = CA.prop.urban, col = "CA method")) +
geom_line(aes(y = PB.prop.urban, col = "PB method")) +
geom_point(aes(y = PB.prop.urban, col = "PB method")) +
labs(title = "Proportion of urban population enrolled as first year undergraduate students",
subtitle = "Population 18-24 y/o. Period Dec 2007 to Sep 2019.",
x ="survey date", y ="proportion") + coord_cartesian(ylim = c(0, 0.09))
print(comb.prop.urb.plot)
## This module explores the data in 3 different ways.
## Create last.migration variable. Note: rows with outside migration are lost.
library(pacman)
pacman::p_load(dplyr, reshape2, ggplot2, zoo)
dat0 <- readRDS("modified_data_2.csv")
## GOAL: Select the group of first year undergraduates.
first.years <- dat0 %>%
filter(higher.education.level == "undergraduate" &
no.years.completed == 1 &
currently.matriculated == "yes")
## GOAL: select adequate 'total' set of the population to create
## proportions.
## METHOD: look for age ranges with at least 10 first year students.
table1 <- dcast(first.years, age ~ no.years.completed)
table1 <- subset(table1, table1[[2]] > 500)
ages.of.interest <- as.vector(table1[[1]])
## METHOD: filter data set for relevant age range. Migrants
## or citizens that have returned from abroad are removed from the
## data set.
total <- dat0 %>%
filter(age %in% ages.of.interest) %>%
filter(location.prior.address == "urban" |
location.prior.address == "rural" |
location.prior.address == "none") %>%
filter(place.of.birth == "urban" | place.of.birth == "rural" |
is.na(place.of.birth))
first.years <- total %>%
filter(higher.education.level == "undergraduate" &
no.years.completed == 1 &
currently.matriculated == "yes")
## ----------------------------------------------------------------##
## GOAL: calculate % enrolment of individuals who identify as urban and
## rural in terms of CURRENT.ADDRESS per survey.date.
## METHOD: create a table of the number of individuals enrolled as
## undergraduates at university by the variables CURRENT.ADDRESS and SURVEY.DATE.
CA.table <- dcast(first.years, survey.date ~ current.address)
## METHOD: count total number of individuals identified as urban
## by CURRENT.ADDRESS.
dat.urban <- total %>%
filter(current.address == "urban")
list0 <- split(dat.urban, dat.urban$survey.date)
number.urban <- data.frame(unlist(lapply(list0, nrow)))
## METHOD: count total number of individuals identified as rural
## by CURRENT.ADDRESS.
dat.rural <- total %>%
filter(current.address == "rural")
list1 <- split(dat.rural, dat.rural$survey.date)
number.rural <- data.frame(unlist(lapply(list1, nrow)))
## METHOD: divide the number of enrolled rural and urban undergraduates per year
## by the total rural and urban populations respectively.
CA.table$numb.urban <- number.urban[, 1]
CA.table$numb.rural <- number.rural[, 1]
CA.table$total <- CA.table$urban+CA.table$rural
CA.table$CA.prop.urban <- CA.table$urban/CA.table$numb.urban
CA.table$CA.prop.rural <- CA.table$rural/CA.table$numb.rural
CA.table$prop.total <- CA.table$total/(CA.table$numb.rural+CA.table$numb.urban)
CA.table$CA.rural.urban.ratio <- (CA.table$CA.prop.rural/CA.table$CA.prop.urban)*100
## ----------------------------------------------------------------##
## GOAL: calculate % enrolment of individuals who identify as urban and
## rural in terms of PLACE.OF.BIRTH per survey.date.
## METHOD: create a table of the number of individuals enrolled as
## undergraduates at university by the variables PLACE.OF.BIRTH and SURVEY.DATE.
first.years.PB <- first.years %>%
filter(!is.na(place.of.birth))
PB.table <- dcast(first.years.PB, survey.date ~ place.of.birth)
## METHOD: count total number of individuals identified as urban
## by PLACE.OF.BIRTH.
dat.urban1 <- total %>%
filter(place.of.birth == "urban")
list0 <- split(dat.urban1, dat.urban1$survey.date)
number.urban1 <- data.frame(unlist(lapply(list0, nrow)))
## METHOD: count total number of individuals identified as rural
## by PLACE.OF.BIRTH.
dat.rural1 <- total %>%
filter(place.of.birth == "rural")
list1 <- split(dat.rural1, dat.rural1$survey.date)
number.rural1 <- data.frame(unlist(lapply(list1, nrow)))
## METHOD: divide the number of enrolled rural and urban undergraduates per year
## by the total rural and urban populations respectively.
PB.table$numb.urban <- number.urban1[, 1]
PB.table$numb.rural <- number.rural1[, 1]
PB.table$total <- PB.table$urban+PB.table$rural
PB.table$PB.prop.urban <- PB.table$urban/PB.table$numb.urban
PB.table$PB.prop.rural <- PB.table$rural/PB.table$numb.rural
PB.table$prop.total <- PB.table$total/(PB.table$numb.rural+PB.table$numb.urban)
PB.table$PB.rural.urban.ratio <- (PB.table$PB.prop.rural/PB.table$PB.prop.urban)*100
## ----------------------------------------------------------------##
## GOAL: calculate % enrolment of individuals who identify as urban and
## rural in terms of PRIOR.ADDRESS and CURRENT.ADDRESS per survey.date.
## METHOD: create a variable which indicates whether someone has either lives
## in a rural/urban area OR has changed area for academic reasons.
first.years.dat1R <- total %>%
filter(current.address == "rural" & ever.moved == "no" | # always lived rural
current.address == "rural" & ever.moved == "yes" &
location.prior.address == "urban" & !reason.for.migration == "academic" | # moved from urban to rural but not for academic reasons
current.address == "urban" & ever.moved == "yes" &
location.prior.address == "rural" & reason.for.migration == "academic" | # moved from rural to urban for academic reasons
current.address == "rural" & location.prior.address == "rural") %>% # always rural but moved
filter(higher.education.level == "undergraduate" &
no.years.completed == 1 &
currently.matriculated == "yes")  %>%
mutate(identification = "rural")
first.years.dat1U <- total %>%
filter(current.address == "urban" & ever.moved == "no" | ## always lived urban
current.address == "rural" & ever.moved == "yes" &
location.prior.address == "urban" & reason.for.migration == "academic" | # moved from urban to rural for academic reasons
current.address == "urban" & ever.moved == "yes" &
location.prior.address == "rural" & !reason.for.migration == "academic" | # moved from rural to urban but for non academic reasons
current.address == "urban" & location.prior.address == "urban") %>% # always urban but moved
filter(higher.education.level == "undergraduate" &
no.years.completed == 1 &
currently.matriculated == "yes")  %>%
mutate(identification = "urban")
## METHOD: Check no rows were lost or duplicated and bind rows.
isTRUE(nrow(first.years) == nrow(first.years.dat1R)+nrow(first.years.dat1U))
first.years.dat1 <- rbind(first.years.dat1R, first.years.dat1U)
## METHOD: create table based on survey date and identification.
PA.table <- dcast(first.years.dat1, survey.date ~ identification)
## METHOD: count total number of individuals identified as urban
## by PLACE.OF.BIRTH.
dat.urban2 <- total %>%
filter(current.address == "urban")
list0 <- split(dat.urban2, dat.urban2$survey.date)
number.urban2 <- data.frame(unlist(lapply(list0, nrow)))
## METHOD: count total number of individuals identified as rural
## by PLACE.OF.BIRTH.
dat.rural2 <- total %>%
filter(current.address == "rural")
list1 <- split(dat.rural2, dat.rural2$survey.date)
number.rural2 <- data.frame(unlist(lapply(list1, nrow)))
## METHOD: divide the number of enrolled rural and urban undergraduates per year
## by the total rural and urban populations respectively.
PA.table$numb.urban <- number.urban2[, 1]
PA.table$numb.rural <- number.rural2[, 1]
PA.table$total <- PA.table$urban+PA.table$rural
PA.table$PA.prop.urban <- PA.table$urban/PA.table$numb.urban
PA.table$PA.prop.rural <- PA.table$rural/PA.table$numb.rural
PA.table$prop.total <- PA.table$total/(CA.table$numb.rural+PA.table$numb.urban)
PA.table$PA.rural.urban.ratio <- (PA.table$PA.prop.rural/PA.table$PA.prop.urban)*100
## ----------------------------------------------------------------##
## GOAL: explore the difference in academic migration between
## those of rural and urban origin.
academic.migration <- first.years.dat1 %>%
filter(reason.for.migration == "academic") %>%
mutate(identification = factor(
ifelse(identification == "rural",
"rural.to.urban.migration",
"urban.to.rural.migration")))
dat.urban3 <- first.years.dat1U
list0 <- split(dat.urban3, dat.urban3$survey.date)
number.urban3 <- data.frame(unlist(lapply(list0, nrow)))
## METHOD: count total number of individuals identified as rural
## by PLACE.OF.BIRTH.
dat.rural3 <- first.years.dat1R
list1 <- split(dat.rural3, dat.rural3$survey.date)
number.rural3 <- data.frame(unlist(lapply(list1, nrow)))
migration.table <- dcast(academic.migration, survey.date ~ identification)
migration.table$numb.rural <- number.rural3[, 1]
migration.table$numb.urban <- number.urban3[, 1]
migration.table$prop.r.to.u.migration <- migration.table$rural.to.urban.migration/migration.table$numb.rural
migration.table$prop.u.to.r.migration <- migration.table$urban.to.rural.migration/migration.table$numb.urban
migration.table$ratio.r.over.u <- (migration.table$prop.r.to.u.migration/migration.table$prop.u.to.r.migration)*100
## Save data.
saveRDS(PA.table, "past.address.table.csv")
saveRDS(PB.table, "place.of.birth.table.csv")
saveRDS(CA.table, "current.address.table.csv")
saveRDS(migration.table, "academic.migration.csv")
rm(list = ls())
## This module visualises the data.
library(pacman)
pacman::p_load(ggplot2, zoo, dplyr)
PA.table <- readRDS("past.address.table.csv")
PB.table <- readRDS("place.of.birth.table.csv")
CA.table <- readRDS("current.address.table.csv")
migration.table <- readRDS("academic.migration.csv")
## GOAL: Create plot comparing rural.urban.ratio for each method.
## METHOD: Select columns of interest for each table.
PA.table.ratio <- PA.table %>%
select(survey.date, PA.rural.urban.ratio)
CA.table.ratio <- CA.table %>%
select(survey.date, CA.rural.urban.ratio)
PB.table.ratio <- PB.table %>%
select(survey.date, PB.rural.urban.ratio)
## METHOD: merge tables into one table.
combined.ratio <- merge(PA.table.ratio, CA.table.ratio)
combined.ratio <- merge(combined.ratio, PB.table.ratio, all.x = TRUE)
## METHOD: create a plot.
comb.ratio.plot <- ggplot(combined.ratio, aes(survey.date, y = population, color = methodology)) +
geom_line(aes(y = PA.rural.urban.ratio, col = "PA method")) +
geom_point(aes(y = PA.rural.urban.ratio, col = "PA method")) +
geom_line(aes(y = CA.rural.urban.ratio, col = "CA method")) +
geom_point(aes(y = CA.rural.urban.ratio, col = "CA method")) +
geom_line(aes(y = PB.rural.urban.ratio, col = "PB method")) +
geom_point(aes(y = PB.rural.urban.ratio, col = "PB method")) +
labs(title = "Ratio of the proportion of rural and urban population enrolled as first year undergraduate students",
subtitle = "Population 18-24 y/o. Period Dec 2007 to Sep 2019.",
x ="survey date", y ="rural:urban enrolment ratio in %")
print(comb.ratio.plot)
## GOAL: Create a plot for rural proportions merged for different methods.
PA.table.prop <- PA.table %>%
select(survey.date, PA.prop.rural)
CA.table.prop <- CA.table %>%
select(survey.date, CA.prop.rural)
PB.table.prop <- PB.table %>%
select(survey.date, PB.prop.rural)
## METHOD: merge tables into one table.
combined.prop.rur <- merge(PA.table.prop, CA.table.prop)
combined.prop.rur <- merge(combined.prop.rur, PB.table.prop, all.x = TRUE)
comb.prop.rur.plot <- ggplot(combined.prop.rur, aes(survey.date, y = population, color = methodology)) +
geom_line(aes(y = PA.prop.rural, col = "PA method")) +
geom_point(aes(y = PA.prop.rural, col = "PA method")) +
geom_line(aes(y = CA.prop.rural, col = "CA method")) +
geom_point(aes(y = CA.prop.rural, col = "CA method")) +
geom_line(aes(y = PB.prop.rural, col = "PB method")) +
geom_point(aes(y = PB.prop.rural, col = "PB method")) +
labs(title = "Proportion of rural population enrolled as first year undergraduate students",
subtitle = "Population 18-24 y/o. Period Dec 2007 to Sep 2019.",
x ="survey date", y ="proportion") + coord_cartesian(ylim = c(0, 0.09))
print(comb.prop.rur.plot)
## GOAL: Create a plot for urban proportions merged for different methods.
PA.table.prop <- PA.table %>%
select(survey.date, PA.prop.urban)
CA.table.prop <- CA.table %>%
select(survey.date, CA.prop.urban)
PB.table.prop <- PB.table %>%
select(survey.date, PB.prop.urban)
## METHOD: merge tables into one table.
combined.prop.urb <- merge(PA.table.prop, CA.table.prop)
combined.prop.urb <- merge(combined.prop.urb, PB.table.prop, all.x = TRUE)
comb.prop.urb.plot <- ggplot(combined.prop.urb, aes(survey.date, y = population, color = methodology)) +
geom_line(aes(y = PA.prop.urban, col = "PA method")) +
geom_point(aes(y = PA.prop.urban, col = "PA method")) +
geom_line(aes(y = CA.prop.urban, col = "CA method")) +
geom_point(aes(y = CA.prop.urban, col = "CA method")) +
geom_line(aes(y = PB.prop.urban, col = "PB method")) +
geom_point(aes(y = PB.prop.urban, col = "PB method")) +
labs(title = "Proportion of urban population enrolled as first year undergraduate students",
subtitle = "Population 18-24 y/o. Period Dec 2007 to Sep 2019.",
x ="survey date", y ="proportion") + coord_cartesian(ylim = c(0, 0.09))
print(comb.prop.urb.plot)
CA.table
